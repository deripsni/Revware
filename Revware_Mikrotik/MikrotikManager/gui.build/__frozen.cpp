// This provides the frozen (compiled bytecode) files that are included if
// any.
#include <Python.h>

#include "nuitka/constants_blob.h"

// Blob from which modules are unstreamed.
#define stream_data constant_bin

// These modules should be loaded as bytecode. They may e.g. have to be loadable
// during "Py_Initialize" already, or for irrelevance, they are only included
// in this un-optimized form. These are not compiled by Nuitka, and therefore
// are not accelerated at all, merely bundled with the binary or module, so
// that CPython library can start out finding them.

struct frozen_desc {
    char const *name;
    ssize_t start;
    int size;
};

void copyFrozenModulesTo( struct _frozen *destination )
{
    struct frozen_desc frozen_modules[] = {
        { "_bootlocale", 7256940, 1056 },
        { "_collections_abc", 7257996, 29649 },
        { "_compression", 7287645, 4461 },
        { "_weakrefset", 7292106, 8433 },
        { "abc", 7300539, 7877 },
        { "ast", 7308416, 12342 },
        { "base64", 7320758, 18181 },
        { "bz2", 7338939, 11796 },
        { "codecs", 7350735, 35312 },
        { "collections", 7386047, -47654 },
        { "collections.abc", 7257996, 29649 },
        { "copyreg", 7433701, 4577 },
        { "dis", 7438278, 14657 },
        { "encodings", 7452935, -3861 },
        { "encodings.aliases", 7456796, 7577 },
        { "encodings.ascii", 7464373, 2021 },
        { "encodings.base64_codec", 7466394, 2581 },
        { "encodings.big5", 7468975, 1579 },
        { "encodings.big5hkscs", 7470554, 1589 },
        { "encodings.bz2_codec", 7472143, 3491 },
        { "encodings.charmap", 7475634, 3103 },
        { "encodings.cp037", 7478737, 2558 },
        { "encodings.cp1006", 7481295, 2634 },
        { "encodings.cp1026", 7483929, 2562 },
        { "encodings.cp1125", 7486491, 7579 },
        { "encodings.cp1140", 7494070, 2548 },
        { "encodings.cp1250", 7496618, 2585 },
        { "encodings.cp1251", 7499203, 2582 },
        { "encodings.cp1252", 7501785, 2585 },
        { "encodings.cp1253", 7504370, 2598 },
        { "encodings.cp1254", 7506968, 2587 },
        { "encodings.cp1255", 7509555, 2606 },
        { "encodings.cp1256", 7512161, 2584 },
        { "encodings.cp1257", 7514745, 2592 },
        { "encodings.cp1258", 7517337, 2590 },
        { "encodings.cp273", 7519927, 2544 },
        { "encodings.cp424", 7522471, 2588 },
        { "encodings.cp437", 7525059, 7396 },
        { "encodings.cp500", 7532455, 2558 },
        { "encodings.cp65001", 7535013, 1811 },
        { "encodings.cp720", 7536824, 2655 },
        { "encodings.cp737", 7539479, 7624 },
        { "encodings.cp775", 7547103, 7410 },
        { "encodings.cp850", 7554513, 7143 },
        { "encodings.cp852", 7561656, 7412 },
        { "encodings.cp855", 7569068, 7593 },
        { "encodings.cp856", 7576661, 2620 },
        { "encodings.cp857", 7579281, 7128 },
        { "encodings.cp858", 7586409, 7113 },
        { "encodings.cp860", 7593522, 7379 },
        { "encodings.cp861", 7600901, 7390 },
        { "encodings.cp862", 7608291, 7525 },
        { "encodings.cp863", 7615816, 7390 },
        { "encodings.cp864", 7623206, 7520 },
        { "encodings.cp865", 7630726, 7390 },
        { "encodings.cp866", 7638116, 7625 },
        { "encodings.cp869", 7645741, 7437 },
        { "encodings.cp874", 7653178, 2686 },
        { "encodings.cp875", 7655864, 2555 },
        { "encodings.cp932", 7658419, 1581 },
        { "encodings.cp949", 7660000, 1581 },
        { "encodings.cp950", 7661581, 1581 },
        { "encodings.euc_jis_2004", 7663162, 1595 },
        { "encodings.euc_jisx0213", 7664757, 1595 },
        { "encodings.euc_jp", 7666352, 1583 },
        { "encodings.euc_kr", 7667935, 1583 },
        { "encodings.gb18030", 7669518, 1585 },
        { "encodings.gb2312", 7671103, 1583 },
        { "encodings.gbk", 7672686, 1577 },
        { "encodings.hex_codec", 7674263, 2568 },
        { "encodings.hp_roman8", 7676831, 2731 },
        { "encodings.hz", 7679562, 1575 },
        { "encodings.idna", 7681137, 6471 },
        { "encodings.iso2022_jp", 7687608, 1596 },
        { "encodings.iso2022_jp_1", 7689204, 1600 },
        { "encodings.iso2022_jp_2", 7690804, 1600 },
        { "encodings.iso2022_jp_2004", 7692404, 1606 },
        { "encodings.iso2022_jp_3", 7694010, 1600 },
        { "encodings.iso2022_jp_ext", 7695610, 1604 },
        { "encodings.iso2022_kr", 7697214, 1596 },
        { "encodings.iso8859_1", 7698810, 2557 },
        { "encodings.iso8859_10", 7701367, 2562 },
        { "encodings.iso8859_11", 7703929, 2656 },
        { "encodings.iso8859_13", 7706585, 2565 },
        { "encodings.iso8859_14", 7709150, 2583 },
        { "encodings.iso8859_15", 7711733, 2562 },
        { "encodings.iso8859_16", 7714295, 2564 },
        { "encodings.iso8859_2", 7716859, 2557 },
        { "encodings.iso8859_3", 7719416, 2564 },
        { "encodings.iso8859_4", 7721980, 2557 },
        { "encodings.iso8859_5", 7724537, 2558 },
        { "encodings.iso8859_6", 7727095, 2602 },
        { "encodings.iso8859_7", 7729697, 2565 },
        { "encodings.iso8859_8", 7732262, 2596 },
        { "encodings.iso8859_9", 7734858, 2557 },
        { "encodings.johab", 7737415, 1581 },
        { "encodings.koi8_r", 7738996, 2609 },
        { "encodings.koi8_t", 7741605, 2520 },
        { "encodings.koi8_u", 7744125, 2595 },
        { "encodings.kz1048", 7746720, 2572 },
        { "encodings.latin_1", 7749292, 2033 },
        { "encodings.mac_arabic", 7751325, 7296 },
        { "encodings.mac_centeuro", 7758621, 2596 },
        { "encodings.mac_croatian", 7761217, 2604 },
        { "encodings.mac_cyrillic", 7763821, 2594 },
        { "encodings.mac_farsi", 7766415, 2538 },
        { "encodings.mac_greek", 7768953, 2578 },
        { "encodings.mac_iceland", 7771531, 2597 },
        { "encodings.mac_latin2", 7774128, 2738 },
        { "encodings.mac_roman", 7776866, 2595 },
        { "encodings.mac_romanian", 7779461, 2605 },
        { "encodings.mac_turkish", 7782066, 2598 },
        { "encodings.mbcs", 7784664, 1802 },
        { "encodings.palmos", 7786466, 2585 },
        { "encodings.ptcp154", 7789051, 2679 },
        { "encodings.punycode", 7791730, 7106 },
        { "encodings.quopri_codec", 7798836, 2603 },
        { "encodings.raw_unicode_escape", 7801439, 1889 },
        { "encodings.rot_13", 7803328, 3105 },
        { "encodings.shift_jis", 7806433, 1589 },
        { "encodings.shift_jis_2004", 7808022, 1599 },
        { "encodings.shift_jisx0213", 7809621, 1599 },
        { "encodings.tis_620", 7811220, 2647 },
        { "encodings.undefined", 7813867, 2281 },
        { "encodings.unicode_escape", 7816148, 1869 },
        { "encodings.unicode_internal", 7818017, 1879 },
        { "encodings.utf_16", 7819896, 5253 },
        { "encodings.utf_16_be", 7825149, 1741 },
        { "encodings.utf_16_le", 7826890, 1741 },
        { "encodings.utf_32", 7828631, 5146 },
        { "encodings.utf_32_be", 7833777, 1634 },
        { "encodings.utf_32_le", 7835411, 1634 },
        { "encodings.utf_7", 7837045, 1662 },
        { "encodings.utf_8", 7838707, 1721 },
        { "encodings.utf_8_sig", 7840428, 4853 },
        { "encodings.uu_codec", 7845281, 3472 },
        { "encodings.zlib_codec", 7848753, 3333 },
        { "enum", 7852086, 16466 },
        { "functools", 7868552, 23642 },
        { "genericpath", 7892194, 3944 },
        { "heapq", 7896138, 15055 },
        { "importlib", 7911193, -3912 },
        { "importlib._bootstrap", 7915105, 31810 },
        { "importlib._bootstrap_external", 7946915, 41541 },
        { "importlib.machinery", 7988456, 1035 },
        { "inspect", 7989491, 84310 },
        { "io", 8073801, 3469 },
        { "keyword", 8077270, 1952 },
        { "linecache", 8079222, 4089 },
        { "locale", 8083311, 36577 },
        { "ntpath", 8119888, 14827 },
        { "opcode", 8134715, 5712 },
        { "operator", 8140427, 14819 },
        { "os", 8155246, 29929 },
        { "quopri", 8185175, 6413 },
        { "re", 8191588, 14464 },
        { "reprlib", 8206052, 5941 },
        { "sre_compile", 8211993, 10932 },
        { "sre_constants", 8222925, 5953 },
        { "sre_parse", 8228878, 22342 },
        { "stat", 8251220, 4174 },
        { "stringprep", 8255394, 12995 },
        { "struct", 8268389, 359 },
        { "threading", 8268748, 39005 },
        { "token", 8307753, 3685 },
        { "tokenize", 8311438, 20478 },
        { "traceback", 8331916, 19927 },
        { "types", 8351843, 8752 },
        { "warnings", 8360595, 12949 },
        { "weakref", 8373544, 19825 },
        { NULL, 0, 0 }
    };

    struct frozen_desc *current = frozen_modules;

    for(;;)
    {
        destination->name = (char *)current->name;
        destination->code = (unsigned char *)&constant_bin[ current->start ];
        destination->size = current->size;

        if (destination->name == NULL) break;

        current += 1;
        destination += 1;
    };
}
