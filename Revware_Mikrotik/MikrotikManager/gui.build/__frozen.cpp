// This provides the frozen (compiled bytecode) files that are included if
// any.
#include <Python.h>

#include "nuitka/constants_blob.h"

// Blob from which modules are unstreamed.
#define stream_data constant_bin

// These modules should be loaded as bytecode. They may e.g. have to be loadable
// during "Py_Initialize" already, or for irrelevance, they are only included
// in this un-optimized form. These are not compiled by Nuitka, and therefore
// are not accelerated at all, merely bundled with the binary or module, so
// that CPython library can start out finding them.

struct frozen_desc {
    char const *name;
    ssize_t start;
    int size;
};

void copyFrozenModulesTo( struct _frozen *destination )
{
    struct frozen_desc frozen_modules[] = {
        { "_bootlocale", 7256900, 1056 },
        { "_collections_abc", 7257956, 29649 },
        { "_compression", 7287605, 4461 },
        { "_weakrefset", 7292066, 8433 },
        { "abc", 7300499, 7877 },
        { "ast", 7308376, 12342 },
        { "base64", 7320718, 18181 },
        { "bz2", 7338899, 11796 },
        { "codecs", 7350695, 35312 },
        { "collections", 7386007, -47654 },
        { "collections.abc", 7257956, 29649 },
        { "copyreg", 7433661, 4577 },
        { "dis", 7438238, 14657 },
        { "encodings", 7452895, -3861 },
        { "encodings.aliases", 7456756, 7577 },
        { "encodings.ascii", 7464333, 2021 },
        { "encodings.base64_codec", 7466354, 2581 },
        { "encodings.big5", 7468935, 1579 },
        { "encodings.big5hkscs", 7470514, 1589 },
        { "encodings.bz2_codec", 7472103, 3491 },
        { "encodings.charmap", 7475594, 3103 },
        { "encodings.cp037", 7478697, 2558 },
        { "encodings.cp1006", 7481255, 2634 },
        { "encodings.cp1026", 7483889, 2562 },
        { "encodings.cp1125", 7486451, 7579 },
        { "encodings.cp1140", 7494030, 2548 },
        { "encodings.cp1250", 7496578, 2585 },
        { "encodings.cp1251", 7499163, 2582 },
        { "encodings.cp1252", 7501745, 2585 },
        { "encodings.cp1253", 7504330, 2598 },
        { "encodings.cp1254", 7506928, 2587 },
        { "encodings.cp1255", 7509515, 2606 },
        { "encodings.cp1256", 7512121, 2584 },
        { "encodings.cp1257", 7514705, 2592 },
        { "encodings.cp1258", 7517297, 2590 },
        { "encodings.cp273", 7519887, 2544 },
        { "encodings.cp424", 7522431, 2588 },
        { "encodings.cp437", 7525019, 7396 },
        { "encodings.cp500", 7532415, 2558 },
        { "encodings.cp65001", 7534973, 1811 },
        { "encodings.cp720", 7536784, 2655 },
        { "encodings.cp737", 7539439, 7624 },
        { "encodings.cp775", 7547063, 7410 },
        { "encodings.cp850", 7554473, 7143 },
        { "encodings.cp852", 7561616, 7412 },
        { "encodings.cp855", 7569028, 7593 },
        { "encodings.cp856", 7576621, 2620 },
        { "encodings.cp857", 7579241, 7128 },
        { "encodings.cp858", 7586369, 7113 },
        { "encodings.cp860", 7593482, 7379 },
        { "encodings.cp861", 7600861, 7390 },
        { "encodings.cp862", 7608251, 7525 },
        { "encodings.cp863", 7615776, 7390 },
        { "encodings.cp864", 7623166, 7520 },
        { "encodings.cp865", 7630686, 7390 },
        { "encodings.cp866", 7638076, 7625 },
        { "encodings.cp869", 7645701, 7437 },
        { "encodings.cp874", 7653138, 2686 },
        { "encodings.cp875", 7655824, 2555 },
        { "encodings.cp932", 7658379, 1581 },
        { "encodings.cp949", 7659960, 1581 },
        { "encodings.cp950", 7661541, 1581 },
        { "encodings.euc_jis_2004", 7663122, 1595 },
        { "encodings.euc_jisx0213", 7664717, 1595 },
        { "encodings.euc_jp", 7666312, 1583 },
        { "encodings.euc_kr", 7667895, 1583 },
        { "encodings.gb18030", 7669478, 1585 },
        { "encodings.gb2312", 7671063, 1583 },
        { "encodings.gbk", 7672646, 1577 },
        { "encodings.hex_codec", 7674223, 2568 },
        { "encodings.hp_roman8", 7676791, 2731 },
        { "encodings.hz", 7679522, 1575 },
        { "encodings.idna", 7681097, 6471 },
        { "encodings.iso2022_jp", 7687568, 1596 },
        { "encodings.iso2022_jp_1", 7689164, 1600 },
        { "encodings.iso2022_jp_2", 7690764, 1600 },
        { "encodings.iso2022_jp_2004", 7692364, 1606 },
        { "encodings.iso2022_jp_3", 7693970, 1600 },
        { "encodings.iso2022_jp_ext", 7695570, 1604 },
        { "encodings.iso2022_kr", 7697174, 1596 },
        { "encodings.iso8859_1", 7698770, 2557 },
        { "encodings.iso8859_10", 7701327, 2562 },
        { "encodings.iso8859_11", 7703889, 2656 },
        { "encodings.iso8859_13", 7706545, 2565 },
        { "encodings.iso8859_14", 7709110, 2583 },
        { "encodings.iso8859_15", 7711693, 2562 },
        { "encodings.iso8859_16", 7714255, 2564 },
        { "encodings.iso8859_2", 7716819, 2557 },
        { "encodings.iso8859_3", 7719376, 2564 },
        { "encodings.iso8859_4", 7721940, 2557 },
        { "encodings.iso8859_5", 7724497, 2558 },
        { "encodings.iso8859_6", 7727055, 2602 },
        { "encodings.iso8859_7", 7729657, 2565 },
        { "encodings.iso8859_8", 7732222, 2596 },
        { "encodings.iso8859_9", 7734818, 2557 },
        { "encodings.johab", 7737375, 1581 },
        { "encodings.koi8_r", 7738956, 2609 },
        { "encodings.koi8_t", 7741565, 2520 },
        { "encodings.koi8_u", 7744085, 2595 },
        { "encodings.kz1048", 7746680, 2572 },
        { "encodings.latin_1", 7749252, 2033 },
        { "encodings.mac_arabic", 7751285, 7296 },
        { "encodings.mac_centeuro", 7758581, 2596 },
        { "encodings.mac_croatian", 7761177, 2604 },
        { "encodings.mac_cyrillic", 7763781, 2594 },
        { "encodings.mac_farsi", 7766375, 2538 },
        { "encodings.mac_greek", 7768913, 2578 },
        { "encodings.mac_iceland", 7771491, 2597 },
        { "encodings.mac_latin2", 7774088, 2738 },
        { "encodings.mac_roman", 7776826, 2595 },
        { "encodings.mac_romanian", 7779421, 2605 },
        { "encodings.mac_turkish", 7782026, 2598 },
        { "encodings.mbcs", 7784624, 1802 },
        { "encodings.palmos", 7786426, 2585 },
        { "encodings.ptcp154", 7789011, 2679 },
        { "encodings.punycode", 7791690, 7106 },
        { "encodings.quopri_codec", 7798796, 2603 },
        { "encodings.raw_unicode_escape", 7801399, 1889 },
        { "encodings.rot_13", 7803288, 3105 },
        { "encodings.shift_jis", 7806393, 1589 },
        { "encodings.shift_jis_2004", 7807982, 1599 },
        { "encodings.shift_jisx0213", 7809581, 1599 },
        { "encodings.tis_620", 7811180, 2647 },
        { "encodings.undefined", 7813827, 2281 },
        { "encodings.unicode_escape", 7816108, 1869 },
        { "encodings.unicode_internal", 7817977, 1879 },
        { "encodings.utf_16", 7819856, 5253 },
        { "encodings.utf_16_be", 7825109, 1741 },
        { "encodings.utf_16_le", 7826850, 1741 },
        { "encodings.utf_32", 7828591, 5146 },
        { "encodings.utf_32_be", 7833737, 1634 },
        { "encodings.utf_32_le", 7835371, 1634 },
        { "encodings.utf_7", 7837005, 1662 },
        { "encodings.utf_8", 7838667, 1721 },
        { "encodings.utf_8_sig", 7840388, 4853 },
        { "encodings.uu_codec", 7845241, 3472 },
        { "encodings.zlib_codec", 7848713, 3333 },
        { "enum", 7852046, 16466 },
        { "functools", 7868512, 23642 },
        { "genericpath", 7892154, 3944 },
        { "heapq", 7896098, 15055 },
        { "importlib", 7911153, -3912 },
        { "importlib._bootstrap", 7915065, 31810 },
        { "importlib._bootstrap_external", 7946875, 41541 },
        { "importlib.machinery", 7988416, 1035 },
        { "inspect", 7989451, 84310 },
        { "io", 8073761, 3469 },
        { "keyword", 8077230, 1952 },
        { "linecache", 8079182, 4089 },
        { "locale", 8083271, 36577 },
        { "ntpath", 8119848, 14827 },
        { "opcode", 8134675, 5712 },
        { "operator", 8140387, 14819 },
        { "os", 8155206, 29929 },
        { "quopri", 8185135, 6413 },
        { "re", 8191548, 14464 },
        { "reprlib", 8206012, 5941 },
        { "sre_compile", 8211953, 10932 },
        { "sre_constants", 8222885, 5953 },
        { "sre_parse", 8228838, 22342 },
        { "stat", 8251180, 4174 },
        { "stringprep", 8255354, 12995 },
        { "struct", 8268349, 359 },
        { "threading", 8268708, 39005 },
        { "token", 8307713, 3685 },
        { "tokenize", 8311398, 20478 },
        { "traceback", 8331876, 19927 },
        { "types", 8351803, 8752 },
        { "warnings", 8360555, 12949 },
        { "weakref", 8373504, 19825 },
        { NULL, 0, 0 }
    };

    struct frozen_desc *current = frozen_modules;

    for(;;)
    {
        destination->name = (char *)current->name;
        destination->code = (unsigned char *)&constant_bin[ current->start ];
        destination->size = current->size;

        if (destination->name == NULL) break;

        current += 1;
        destination += 1;
    };
}
